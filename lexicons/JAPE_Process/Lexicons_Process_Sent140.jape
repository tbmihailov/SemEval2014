Imports: { import static gate.Utils.*;}

Phase: LexiconsSum_NRC
Input: tweet
Options: control = appelt

Rule: LexiconsSum_NRC
({tweet}):tw
-->
:tw {
	AnnotationSet lookups = inputAS.getContained(start(twAnnots), end(twAnnots)).get("Lookup");
	FeatureMap featureMap = twAnnots.iterator().next().getFeatures();
	
	//common
	int pos=0;
	int neg=0;
	float sentiment=0;
	float ratio=0;
	
	//Sentiment140 UNI
	int sen140_uni_pos_sum = 0;
	int sen140_uni_neg_sum = 0;
	float sen140_uni_sent_sum = 0;
	float sen140_uni_ratio = 0;
	int sen140_uni_pos_max = 0;
	int sen140_uni_neg_max = 0;
	float sen140_uni_sent_max = 0;
	
	//sentiment 140 BIGRAM
	int sen140_bi_pos_sum = 0;
	int sen140_bi_neg_sum = 0;
	float sen140_bi_sent_sum = 0;
	float sen140_bi_ratio = 0;
	int sen140_bi_pos_max = 0;
	int sen140_bi_neg_max = 0;
	float sen140_bi_sent_max = 0;
	
	for(Annotation a : lookups){
		FeatureMap aFeatMap = a.getFeatures();
		
		String annoVal = gate.Utils.stringFor(doc, a);
		annoVal = annoVal.replace(" ", "_");
				
		//Sentiment140 lexicon
		//unigrams
		if(("sen140".equals(aFeatMap.get("majorType")))
		&&("unigrams".equals(aFeatMap.get("minorType")))){
			pos=aFeatMap.containsKey("p")?Integer.parseInt(aFeatMap.get("p").toString()):0;
			neg=aFeatMap.containsKey("n")?Integer.parseInt(aFeatMap.get("n").toString()):0;
			sentiment=aFeatMap.containsKey("s")?Float.parseFloat(aFeatMap.get("s").toString()):0;
			ratio=(pos+1)/(neg+1);
			
			//set new features
			aFeatMap.put("sen140_uni_pos", pos);
			aFeatMap.put("sen140_uni_neg", neg);
			aFeatMap.put("sen140_uni_sent", sentiment);
			aFeatMap.put("sen140_uni_ratio", ratio);
			
			sen140_uni_pos_sum+=pos;
			sen140_uni_neg_sum+=neg;
			sen140_uni_sent_sum+=sentiment;
			
			if(pos>sen140_uni_pos_max){
			  sen140_uni_pos_max = pos;
			}
			if(neg > sen140_uni_neg_max){
			  sen140_uni_neg_max = pos;
			}
			if(sentiment > sen140_uni_sent_max){
			  sen140_uni_sent_max = sentiment;
			}
			
			//featureMap.put("sen140_uni_pos_t"+"_"+annoVal, pos);
			//featureMap.put("sen140_uni_neg_t"+"_"+annoVal, neg);
			//featureMap.put("sen140_uni_sent_t"+"_"+annoVal, sentiment);
			//featureMap.put("sen140_uni_ratio_t"+"_"+annoVal, ratio);
		}
		
		//Sentiment140 lexicon
		//bigram
		if(("sen140".equals(aFeatMap.get("majorType")))
		&&("bigrams".equals(aFeatMap.get("minorType")))){
			pos=aFeatMap.containsKey("p")?Integer.parseInt(aFeatMap.get("p").toString()):0;
			neg=aFeatMap.containsKey("n")?Integer.parseInt(aFeatMap.get("n").toString()):0;
			sentiment=aFeatMap.containsKey("s")?Float.parseFloat(aFeatMap.get("s").toString()):0;
			ratio=(pos+1)/(neg+1);
			
			//set new features
			aFeatMap.put("sen140_bi_pos", pos);
			aFeatMap.put("sen140_bi_neg", neg);
			aFeatMap.put("sen140_bi_sent", sentiment);
			aFeatMap.put("sen140_bi_ratio", ratio);
			
			sen140_bi_pos_sum+=pos;
			sen140_bi_neg_sum+=neg;
			sen140_bi_sent_sum+=sentiment;
			
			if(pos > sen140_bi_pos_max){
				sen140_bi_pos_max = pos;
			}
			
			if(neg > sen140_bi_neg_max){
				sen140_bi_neg_max = neg;
			}
			
			if(sentiment > sen140_bi_sent_max){
				sen140_bi_sent_max = sentiment;
			}
			
			//featureMap.put("sen140_bi_pos_t"+"_"+annoVal, pos);
			//featureMap.put("sen140_bi_neg_t"+"_"+annoVal, neg);
			//featureMap.put("sen140_bi_sent_t"+"_"+annoVal, sentiment);
			//featureMap.put("sen140_bi_ratio_t"+"_"+annoVal, ratio);
		}
	}
	
	//Sentiment140 lexicon UNI
	
	featureMap.put("sen140_uni_pos_sum", sen140_uni_pos_sum);
	featureMap.put("sen140_uni_neg_sum", -sen140_uni_neg_sum);
	featureMap.put("sen140_uni_sent_sum", sen140_uni_sent_sum);
	featureMap.put("sen140_uni_posneg_sum", sen140_uni_pos_sum - sen140_uni_neg_sum);
	featureMap.put("sen140_uni_ratio", ((float)(sen140_uni_pos_sum+1)/(sen140_uni_neg_sum+1)));
	featureMap.put("sen140_uni_pos_max", sen140_uni_pos_max);
	featureMap.put("sen140_uni_neg_max", -sen140_uni_neg_max);
	featureMap.put("sen140_uni_sent_sum", sen140_uni_sent_sum);
	
	//Sentiment140 lexicon BI
		
	featureMap.put("sen140_bi_pos_sum", sen140_bi_pos_sum);
	featureMap.put("sen140_bi_neg_sum", -sen140_bi_neg_sum);
	featureMap.put("sen140_bi_sent_sum", sen140_bi_sent_sum);
	featureMap.put("sen140_bi_posneg_sum", sen140_bi_pos_sum - sen140_bi_neg_sum);
	featureMap.put("sen140_bi_ratio", ((float)(sen140_bi_pos_sum+1)/(sen140_bi_neg_sum+1)));
	featureMap.put("sen140_bi_pos_max", sen140_bi_pos_max);
	featureMap.put("sen140_bi_neg_max", -sen140_bi_neg_max);
	featureMap.put("sen140_bi_sent_max", sen140_bi_sent_max);

}

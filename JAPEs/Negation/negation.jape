Phase:Negation
Input: Token Lookup Split tweet
Options: control = appelt

Rule:negation (
	{Token, Lookup.majorType == "negation"}
	({Token.string !~ "^[.:;!?]$"})[0,30]
	({Split.kind != external})?
):ng
-->
:ng.Negation={rule="negation"}


Phase:NegationSuffix
Input: Negation
Options: control = appelt

Rule:negationSuffix (
	{Negation}
):ng
-->
:ng {

	Long start = ngAnnots.firstNode().getOffset();
	Long end = ngAnnots.lastNode().getOffset();
	
	
	//Add NEG suffix to Lookups.
	final String NEG = "NEG";
	
	AnnotationSet lookupAS = inputAS.get("Lookup").getContained(start, end);

	for(Annotation lookupAnn : lookupAS) {
		lookupAnn.getFeatures().put("negated", 1);
	}
	
	AnnotationSet tokenAS = inputAS.get("Token").getContained(start, end);

	int numNegationTokens = 0;
	for(Annotation tokenAnn : tokenAS) {
		numNegationTokens++;
	}
	ngAnnots.iterator().next().getFeatures().put("numNegationTokens", numNegationTokens);
	
	
	
	//Add NEG suffix to words.
	String text = "";
	try {
		text = doc.getContent().getContent(start, end).toString();
	} catch (gate.util.InvalidOffsetException e) {
		throw new java.lang.IndexOutOfBoundsException(e.toString());
	}
	
	String[] words = text.split(" ");
	for (int n = 1; n <= words.length; n++) {
		//String[] negatedWords = new String[words.length - n + 1];
		List<String> negatedWords = new ArrayList<String>();
		negatedWords.add(words[0]);
		for (int i = 1; i < words.length; i++) {
			StringBuilder sb = new StringBuilder();
			sb.append(words[i]);
			sb.append("_" + NEG);
			//negatedWords[i] = sb.toString();
			negatedWords.add(sb.toString());
		}
		String featureCode = "Negations";
		//ngAnnots.iterator().next().getFeatures().put(featureCode, Arrays.toString(negatedWords));
		ngAnnots.iterator().next().getFeatures().put(featureCode, negatedWords);
	}
}



/* ===== Not Used =====
Phase:NotNegPunctuation
Input: Token
Options: control = appelt

Rule:notNegPunctuation (
	{Token.string !~ "^[.:;!?]$"}
):ng
-->
:ng.NotNegPunctuation={}


Phase:NegPunctuation
Input: Token
Options: control = appelt

Rule:negPunctuation (
	{Token.string =~ "^[.:;!?]$"}
):ng
-->
:ng.NegPunctuation={}
*/